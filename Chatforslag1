#!/usr/bin/env python3
import rclpy
from rclpy.node import Node
from std_msgs.msg import Int16MultiArray
import RPi.GPIO as GPIO

class MotorDriver(Node):
    def __init__(self):
        super().__init__('motor_driver')

        # GPIO pin-definisjoner
        self.LEFT_FWD = 6
        self.LEFT_BWD = 13
        self.RIGHT_FWD = 19
        self.RIGHT_BWD = 26

        # PWM-frekvens i Hz
        self.PWM_FREQ = 1000

        # Initialiser GPIO
        GPIO.setmode(GPIO.BCM)
        for pin in [self.LEFT_FWD, self.LEFT_BWD, self.RIGHT_FWD, self.RIGHT_BWD]:
            GPIO.setup(pin, GPIO.OUT)
            GPIO.output(pin, GPIO.LOW)

        # Sett opp PWM for fremover-pinnene
        self.pwm_LEFT = GPIO.PWM(self.LEFT_FWD, self.PWM_FREQ)
        self.pwm_RIGHT = GPIO.PWM(self.RIGHT_FWD, self.PWM_FREQ)
        self.pwm_LEFT.start(0)
        self.pwm_RIGHT.start(0)

        # Abonner på hastighetskommando
        self.sub = self.create_subscription(
            Int16MultiArray,
            'bevegelses/kommando',
            self.kjør_callback,
            10
        )

        self.get_logger().info("MotorDriver med PWM er klar – lytter på bevegelses/kommando.")

        # Rydd opp ved avslutning
        self.add_on_shutdown(self.cleanup)

    def kjør_callback(self, msg: Int16MultiArray):
        venstre, høyre = msg.data
        self.set_wheel(self.pwm_LEFT, self.LEFT_FWD, self.LEFT_BWD, venstre)
        self.set_wheel(self.pwm_RIGHT, self.RIGHT_FWD, self.RIGHT_BWD, høyre)
        self.get_logger().info(f"PWM: venstre={venstre}, høyre={høyre}")

    def set_wheel(self, pwm, pin_fwd, pin_bwd, speed):
        """Styrer hjul med PWM og retning."""
        # Begrens verdiene til -100 til 100
        speed = max(min(speed, 100), -100)

        if speed > 0:
            GPIO.output(pin_bwd, GPIO.LOW)
            pwm.ChangeDutyCycle(speed)
        elif speed < 0:
            GPIO.output(pin_fwd, GPIO.LOW)
            GPIO.output(pin_bwd, GPIO.HIGH)
            pwm.ChangeDutyCycle(-speed)
        else:
            GPIO.output(pin_fwd, GPIO.LOW)
            GPIO.output(pin_bwd, GPIO.LOW)
            pwm.ChangeDutyCycle(0)

    def cleanup(self):
        self.get_logger().info("Stopper PWM og rydder opp GPIO.")
        self.pwm_LEFT.stop()
        self.pwm_RIGHT.stop()
        GPIO.cleanup()

def main():
    rclpy.init()
    node = MotorDriver()
    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        pass
    finally:
        node.destroy_node()
        rclpy.shutdown()

if __name__ == '__main__':
    main()
